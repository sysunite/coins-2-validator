// Generated by CoffeeScript 1.12.5
(function() {
  var Promise, app, checkInitialized, db, delay, express, initConfirmed, initDb, mysql, processWrites, tries, xmlparser;

  Promise = require('bluebird');

  mysql = require('mysql-promise');

  express = require("express");

  xmlparser = require('express-xml-bodyparser');

  app = express();

  checkInitialized = function() {
    var delay;
    if (initConfirmed) {
      return Promise.resolve(true);
    }
    console.log("Trying to connect to registry on 39445");
    delay = 5000;
    return db.query('USE `registry`;').then(function() {
      return db.query('SELECT * FROM `registry` LIMIT 1;');
    }).then(function() {
      var initConfirmed;
      return initConfirmed = true;
    })["catch"](function(error) {
      if (error.code === 'ER_NO_SUCH_TABLE') {
        return false;
      } else {
        if (error.code === 'ER_BAD_DB_ERROR') {
          db.query('CREATE DATABASE `registry`;').then(function() {
            return checkInitialized();
          });
        }
        if (tries-- > 0) {
          return Promise.delay(delay).then(function() {
            return checkInitialized();
          });
        } else {
          return Promise.reject("Could not connect to mysql database, " + error.code + ".");
        }
      }
    });
  };

  initDb = function() {
    return checkInitialized().then(function(done) {
      if (done) {
        return Promise.resolve();
      }
      console.log("Dropping and creating table");
      return db.query('DROP TABLE IF EXISTS `registry`;').then(function() {
        console.log("Creating table");
        return db.query('CREATE TABLE `registry` ( `seqnr` BIGINT NOT NULL AUTO_INCREMENT, `timestamp` BIGINT  NOT NULL, `zooi` varchar(128) NOT NULL, `xml` text NOT NULL, PRIMARY KEY (`seqnr`), INDEX `timestamp_index` (`timestamp` ASC), INDEX `zooi_index` (`zooi` ASC) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;');
      }).then(function() {
        var initConfirmed;
        return initConfirmed = true;
      });
    });
  };

  processWrites = function(xml) {
    return initDb().then(function() {
      var query;
      console.log(Date.now() + " Processing XML");
      query = 'INSERT INTO `registry` (`timestamp`, `zooi`, `xml`) VALUES ';
      query += "(" + (Date.now()) + ", " + (db.pool.escape(xml.zooi)) + ", " + (db.pool.escape(JSON.stringify(xml))) + ");";
      return db.query(query);
    });
  };

  tries = 10;

  delay = 5000;

  db = mysql();

  initConfirmed = false;

  db.configure({
    host: 'registry-database',
    port: '3306',
    user: 'registry',
    password: 'vZGZww8HLWTLqnPY',
    dateStrings: true
  });

  app.use(xmlparser());

  app.post('/report', function(req, res, next) {
    return processWrites(req.body).then(function() {
      return res.send('');
    });
  });

  app.listen(39444, function() {
    return console.log("Started on PORT 39444");
  });

}).call(this);
